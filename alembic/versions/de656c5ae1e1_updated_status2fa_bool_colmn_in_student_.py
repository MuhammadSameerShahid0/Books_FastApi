"""updated  status2fa bool colmn in student, author and user table

Revision ID: de656c5ae1e1
Revises: 018e8616d328
Create Date: 2025-08-18 21:05:37.441761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de656c5ae1e1'
down_revision: Union[str, Sequence[str], None] = '018e8616d328'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('authors', 'status_2fa',
               existing_type=sa.VARCHAR(),
               type_=sa.Boolean(),
               existing_nullable=True,
               postgresql_using='status_2fa::boolean')
    op.alter_column('students', 'status_2fa',
               existing_type=sa.VARCHAR(),
               type_=sa.Boolean(),
               existing_nullable=True,
               postgresql_using='status_2fa::boolean')
    op.alter_column('users', 'status_2fa',
               existing_type=sa.VARCHAR(),
               type_=sa.Boolean(),
               existing_nullable=True,
               postgresql_using='status_2fa::boolean')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'status_2fa',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               existing_nullable=True,
               postgresql_using='status_2fa::text')
    op.alter_column('students', 'status_2fa',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               existing_nullable=True,postgresql_using='status_2fa::text')
    op.alter_column('authors', 'status_2fa',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               existing_nullable=True,postgresql_using='status_2fa::text')
    # ### end Alembic commands ###
